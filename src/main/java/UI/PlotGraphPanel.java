package UI;

import javax.swing.*;

class PlotGraphPanel extends GeneralPanel
{
    private JRadioButton driftButton_1;
    private JRadioButton driftButton_2;
    private JRadioButton filterButton_1;
    private JRadioButton filterButton_2;
    private JLabel plot_1;
    private JLabel plot_2;
    private JLabel plot_3;
    private JLabel plot_4;

    protected PlotGraphPanel()
    {
        /*
            Initiate the change value panel given the UI design

            This pages requires following components:
            (1) label 1: JLabel, display the current user ID
            (2) label 2: JLabel, display the current baby ID
            (3) button_1: JButton, display "Log out"
            (4) button_2: JButton, display "Back"
            (5) driftButton_1: JRadioButton, display "Differentiation"
            (6) driftButton_2: JRadioButton, display "Linear Regression"
            (7) filterButton_1: JRadioButton, display "Moving Average"
            (8) filterButton_2: JRadioButton, display "Savitski Golay"
            (9) plot_1: JLabel, display the plot of glucose concentration with respect to time
            (10) plot_2: JLabel, display the plot of skin concentration with respect to time
            (11) plot_3: JLabel, display the plot of glucose concentration with respect to skin concentration
            (12) plot_4: JLabel, display the Bland-Altman Plot

            Add action listeners to every radio button so each time a new option is selected, the plots could be
            reloaded and displayed

         */
    }

    protected String getDriftOption()
    {
        /*
            Return the user's choice of the drift removal from the first button group

        return:
            result: String, either "differentiation" or "linear regression"
         */
        if (driftButton_1.isSelected()) {return "differentiation";}
        else {return "linear regression";}
    }

    protected String getFilterOption()
    {
        /*
            Return the user's choice of the noise removal from the second button group

        return:
            result: String, either "moving average" or "savitski golay"
         */
        if (filterButton_1.isSelected()) {return "moving average";}
        else {return "savitski golay";}
    }

    protected void loadImage(String directory)
    {
        /*
            Load plots generated by python scripts from the given directory and display them

            By default, the plots could be saved under: Base\DataBase\Plot
        input:
            directory: String, the directory where plots could be saved
         */
    }
}
